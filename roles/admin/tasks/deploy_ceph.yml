---

- name: Make ceph directory
  file:
    path: /home/ceph-admin/ceph-dir/
    owner: ceph-admin
    group: ceph-admin
    state: directory
    mode: 0775
  tags:
    - admin
    - ceph

- find:
    paths: /home/ceph-admin/ceph-dir/
    patterns: "*.*"
  register: files_to_delete
  tags:
    - admin
    - ceph

- name: Delete all files in ceph directory
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  tags:
    - admin
    - ceph

- name: Ceph Purge Nodes
  command: "ceph-deploy purge {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['nodes'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph

- name: Ceph Purge Data
  command: "ceph-deploy purgedata {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['nodes'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph

- name: Ceph Forget Keys
  command: "ceph-deploy forgetkeys"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph

- name: Make configuration directory
  file:
    path: /etc/ceph/
    owner: root
    group: root
    state: directory
    mode: 0775
  tags:
    - admin
    - ceph

# We need to crete a configuration file for each ceph node
# http://docs.ceph.com/docs/giant/rados/configuration/ceph-conf/
- name: copy ceph configuration
  template:
    src: roles/common/templates/ceph.j2
    dest: /etc/ceph/ceph.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - admin
    - ceph
    - common

# We need to crete a configuration file for each ceph node
# http://docs.ceph.com/docs/giant/rados/configuration/ceph-conf/
- name: copy ceph configuration (to local)
  template:
    src: roles/common/templates/ceph.j2
    dest: /home/ceph-admin/ceph-dir/ceph.conf
    owner: root
    group: root
    mode: 0644
  tags:
    - admin
    - ceph
    - common

- name: Create Ceph Nodes
  command: "ceph-deploy new {{ groups['monitors'] | map('extract', hostvars, 'ansible_hostname') | join(' ') }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph

- name: Install Ceph Node Packages
  command: "ceph-deploy install {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['nodes'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
  when: ansible_distribution == "Ubuntu"

- name: (fedora) Install Ceph Node Packages
  command: "ceph-deploy install --no-adjust-repos {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['nodes'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
  when: ansible_distribution == "Fedora"

- name: Create Ceph Monitor
  command: "ceph-deploy mon create-initial"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
    - keys

- name: Copy admin configuration/files to Nodes
  command: "ceph-deploy admin {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['nodes'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
    - keys

# btrfs also incorporates multi-device management into the file system, which
# enables you to support heterogeneous disk storage infrastructure, data allocation
# policies. The community also aims to provide fsck, deduplication, and data
# encryption support in the future. This compelling list of features makes btrfs
# the ideal choice for Ceph clusters.
# http://docs.ceph.com/docs/jewel/rados/configuration/filesystem-recommendations/
- name: Create OSDs - this will take a while...
  command: "ceph-deploy osd create --zap-disk --fs-type xfs {{ hostvars[item[0]]['ansible_hostname'] }}:{{ item[1] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_nested:
    - "{{ groups['deploy'] }}"
    - "{{ hostvars[groups['deploy'][0]]['drives'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
  when: ansible_distribution == "Ubuntu"

# sudo dmsetup remove_all on ceph nodes if this errors
- name: (fedora) Zap OSDs
  command: "ceph-deploy disk zap {{ hostvars[item[0]]['ansible_hostname'] }} {{ item[1] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_nested:
    - "{{ groups['deploy'] }}"
    - "{{ hostvars[groups['deploy'][0]]['drives'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
    - disk
  when: ansible_distribution == "Fedora"

- name: (fedora) Create OSDs - this will take a while...
  command: "ceph-deploy osd create --data {{ item[0] }} --zap-disk --fs-type xfs {{ hostvars[item[1]]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_nested:
    - "{{ hostvars[groups['deploy'][0]]['drives'] }}"
    - "{{ groups['deploy'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
    - disk
    - test
  when: ansible_distribution == "Fedora"

# we dont need a meta data server on every node.  These are used for cephfs
- name: Create Metadata Server
  command: "ceph-deploy mds create {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['mds'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
    - disk

# Add Object Gateway, default web interface on 7480
- name: Create a RGW
  command: "ceph-deploy rgw create {{ hostvars[item]['ansible_hostname'] }}"
  args:
    chdir: /home/ceph-admin/ceph-dir/
  with_items: "{{ groups['rgw'] }}"
  become: yes
  become_user: ceph-admin
  tags:
    - admin
    - ceph
    - disk
